
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/decoding_data.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_decoding_data.py>`
        to download the full example code. or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_decoding_data.py:


===================
Decoding square root encoded data
===================

Data downlinked from the individual PUNCH spacecraft are usually square root encoded. This decoding is completed as part of the regular data processing pipeline for end-user data products. If using Level 0 manually, you may want to decode this data manually, as outlined here.

.. GENERATED FROM PYTHON SOURCE LINES 10-11

Data downlinked from the individual PUNCH spacecraft are usually square root encoded. This decoding is completed as part of the regular data processing pipeline for end-user data products. If using Level 0 manually, you may want to decode this data manually, as outlined here.

.. GENERATED FROM PYTHON SOURCE LINES 13-14

Load libraries

.. GENERATED FROM PYTHON SOURCE LINES 14-25

.. code-block:: Python


    import astropy.units as u
    import matplotlib.pyplot as plt
    import numpy as np
    from matplotlib.colors import LogNorm

    from punchbowl.data import load_ndcube_from_fits
    from punchbowl.data.sample import PUNCH_DK4
    from punchbowl.data.visualize import cmap_punch
    from punchbowl.level1.sqrt import decode_sqrt





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Files Downloaded:   0%|          | 0/1 [00:00<?, ?file/s]
    PUNCH_L0_DK4_20250414154536_v1.fits:   0%|          | 0.00/1.74M [00:00<?, ?B/s]
    PUNCH_L0_DK4_20250414154536_v1.fits:   2%|▏         | 40.9k/1.74M [00:00<00:05, 313kB/s]
    PUNCH_L0_DK4_20250414154536_v1.fits:  42%|████▏     | 732k/1.74M [00:00<00:00, 3.34MB/s]
                                                                                                Files Downloaded: 100%|██████████| 1/1 [00:00<00:00,  1.87file/s]    Files Downloaded: 100%|██████████| 1/1 [00:00<00:00,  1.87file/s]




.. GENERATED FROM PYTHON SOURCE LINES 26-27

We can begin by loading sample data into an NDCube object. Here we'll load a sample level 0 LED dark image from NFI. Note that if running with downloaded PUNCH data, replace the sample PUNCH_DK4 data below with a path pointing towards a FITS file.

.. GENERATED FROM PYTHON SOURCE LINES 29-31

.. code-block:: Python

    cube = load_ndcube_from_fits(PUNCH_DK4)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/astropy/io/fits/hdu/hdulist.py:1372: AstropyDeprecationWarning: The indent function is deprecated and may be removed in a future version.
            Use textwrap.indent() instead.
      f"uses zero-based indexing).\n{indent(str(exc))}\n"
    /opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/astropy/io/fits/hdu/hdulist.py:1370: VerifyWarning: Error validating header for HDU #4 (note: Astropy uses zero-based indexing).
        Header size is not multiple of 2880: 1
    There may be extra bytes after the last HDU or the file is corrupted.
      warnings.warn(
    /opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/astropy/wcs/wcs.py:537: FITSFixedWarning: HGLT_OBS= / [deg] S/C heliographic latitude 
    a floating-point value was expected.
      wcsprm = _wcs.Wcsprm(
    /opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/astropy/wcs/wcs.py:537: FITSFixedWarning: HGLN_OBS= / [deg] S/C heliographic longitude (B0) 
    a floating-point value was expected.
      wcsprm = _wcs.Wcsprm(
    /opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/astropy/wcs/wcs.py:537: FITSFixedWarning: DSUN_OBS= / [m] S/C distance from Sun 
    a floating-point value was expected.
      wcsprm = _wcs.Wcsprm(




.. GENERATED FROM PYTHON SOURCE LINES 32-33

Note that for level 0 data the data is still square-root encoded, and will be unpacked in subsequent levels. You can manually decoded this data with the same pipeline function.

.. GENERATED FROM PYTHON SOURCE LINES 35-44

.. code-block:: Python

    data_decoded = decode_sqrt(cube.data,
                          from_bits = 16,
                          to_bits = 11,
                          ccd_gain_top = 4.94,
                          ccd_gain_bottom = 4.89,
                          ccd_offset = 400,
                          ccd_read_noise = 17
                        )








.. GENERATED FROM PYTHON SOURCE LINES 45-46

Now that we have this data square-root decoded, we can plot the image.

.. GENERATED FROM PYTHON SOURCE LINES 48-63

.. code-block:: Python

    fig, ax = plt.subplots(figsize=(9.5, 7.5), subplot_kw={"projection":cube.wcs})

    im = ax.imshow(data_decoded, cmap=cmap_punch, norm=LogNorm(vmax=450))

    lon, lat = ax.coords
    lat.set_major_formatter("dd")
    lon.set_major_formatter("dd")
    ax.set_facecolor("black")
    ax.coords.grid(color="white", alpha=.25, ls="dotted")
    ax.set_xlabel("Helioprojective longitude")
    ax.set_ylabel("Helioprojective latitude")
    ax.set_title("PUNCH Level 0 LED Image")
    fig.colorbar(im, ax=ax, label="DN")
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_decoding_data_001.png
   :alt: PUNCH Level 0 LED Image
   :srcset: /auto_examples/images/sphx_glr_decoding_data_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 17.247 seconds)


.. _sphx_glr_download_auto_examples_decoding_data.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/punch-mission/punchbowl/binder?urlpath=lab/tree/notebooks/auto_examples/decoding_data.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: decoding_data.ipynb <decoding_data.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: decoding_data.py <decoding_data.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: decoding_data.zip <decoding_data.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
